<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>ISession Interface</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="ISession interface" />
    <meta name="System.Keywords" content="Kaazing.JMS.ISession interface" />
    <meta name="System.Keywords" content="ISession interface, about ISession interface" />
    <meta name="Microsoft.Help.F1" content="Kaazing.JMS.ISession" />
    <meta name="Microsoft.Help.Id" content="T:Kaazing.JMS.ISession" />
    <meta name="Description" content="A Session object is a single-threaded context for producing and consuming messages. Although it may allocate provider resources outside the Java virtual machine (JVM), it is considered a lightweight JMS object." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="Kaazing.JMS" />
    <meta name="file" content="T_Kaazing_JMS_ISession" />
    <meta name="guid" content="T_Kaazing_JMS_ISession" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:Kaazing.JMS.ISession" />
      <MSHelp:TOCTitle Title="ISession Interface" />
      <MSHelp:RLTitle Title="ISession Interface (Kaazing.JMS)" />
      <MSHelp:Keyword Index="A" Term="T:Kaazing.JMS.ISession" />
      <MSHelp:Keyword Index="A" Term="frlrfKaazingJMSISessionClassTopic" />
      <MSHelp:Keyword Index="K" Term="ISession interface" />
      <MSHelp:Keyword Index="K" Term="Kaazing.JMS.ISession interface" />
      <MSHelp:Keyword Index="K" Term="ISession interface, about ISession interface" />
      <MSHelp:Keyword Index="F" Term="Kaazing.JMS.ISession" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="Kaazing.JMS.dll" />
      <MSHelp:Attr Name="APIName" Value="Kaazing.JMS.ISession" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="A Session object is a single-threaded context for producing and consuming messages. Although it may allocate provider resources outside the Java virtual machine (JVM), it is considered a lightweight JMS object.A session ..." />
      <MSHelp:Attr Name="AssemblyVersion" Value="4.0.0.69" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">.NET Framework Class Library</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">ISession Interface</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="AllMembers_T_Kaazing_JMS_ISession.htm">Members</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  </td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <div class="summary"><p>A Session object is a single-threaded context for producing and consuming 
             messages. Although it may allocate provider resources outside the Java 
             virtual machine (JVM), it is considered a lightweight JMS object.</p><p>A session serves several purposes:
            
             <ul><li>It is a factory for its message producers and consumers.</li><li>It supplies provider-optimized message factories.</li><li>It is a factory for TemporaryTopics and 
                    TemporaryQueues. </li><li> It provides a way to create Queue or Topic
                  objects for those clients that need to dynamically manipulate 
                  provider-specific destination names.</li><li>It supports a single series of transactions that combine work 
                   spanning its producers and consumers into atomic units.</li><li>It defines a serial order for the messages it consumes and 
                   the messages it produces.</li><li>It retains messages it consumes until they have been 
                   acknowledged.</li><li>It serializes execution of message listeners registered with 
                   its message consumers.</li><li> It is a factory for QueueBrowsers.</li></ul></p><p>A session can create and service multiple message producers and 
             consumers.</p><p>One typical use is to have a thread block on a synchronous 
             MessageConsumer until a message arrives. The thread may then
             use one or more of the Session's MessageProducers.</p><p>If a client desires to have one thread produce messages while others 
             consume them, the client should use a separate session for its producing 
             thread.</p><p>Once a connection has been started, any session with one or more 
             registered message listeners is dedicated to the thread of control that 
             delivers messages to it. It is erroneous for client code to use this session
             or any of its constituent objects from another thread of control. The
             only exception to this rule is the use of the session or connection 
             close method.</p><p>It should be easy for most clients to partition their work naturally
             into sessions. This model allows clients to start simply and incrementally
             add message processing complexity as their need for concurrency grows.</p><p>The close method is the only session method that can be 
             called while some other session method is being executed in another thread.</p><p>A session may be specified as transacted. Each transacted 
             session supports a single series of transactions. Each transaction groups 
             a set of message sends and a set of message receives into an atomic unit 
             of work. In effect, transactions organize a session's input message 
             stream and output message stream into series of atomic units. When a 
             transaction commits, its atomic unit of input is acknowledged and its 
             associated atomic unit of output is sent. If a transaction rollback is 
             done, the transaction's sent messages are destroyed and the session's input 
             is automatically recovered.</p><p>The content of a transaction's input and output units is simply those 
             messages that have been produced and consumed within the session's current 
             transaction.</p><p>A transaction is completed using either its session's commit
             method or its session's rollback method. The completion of a
             session's current transaction automatically begins the next. The result is
             that a transacted session always has a current transaction within which its 
             work is done.  </p><p>The Java Transaction Service (JTS) or some other transaction monitor may 
             be used to combine a session's transaction with transactions on other 
             resources (databases, other JMS sessions, etc.). Since Java distributed 
             transactions are controlled via the Java Transaction API (JTA), use of the 
             session's commit and rollback methods in 
             this context is prohibited.</p><p>The JMS API does not require support for JTA; however, it does define 
             how a provider supplies this support.</p><p>Although it is also possible for a JMS client to handle distributed 
             transactions directly, it is unlikely that many JMS clients will do this.
             Support for JTA in the JMS API is targeted at systems vendors who will be 
             integrating the JMS API into their application server products.</p></div><p />
    <b>Namespace:</b> 
   <a href="N_Kaazing_JMS.htm">Kaazing.JMS</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">Kaazing.JMS</span> (in Kaazing.JMS.dll)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">ISession</span></pre></td></tr></table></span><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ISession</span></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">ISession</span></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_Kaazing_JMS_ISession.htm">ISession Members</a></div><div class="seeAlsoStyle"><a href="N_Kaazing_JMS.htm">Kaazing.JMS Namespace</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_IQueueSession.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IQueueSession</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_ITopicSession.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ITopicSession</a></div><div class="seeAlsoStyle"><span class="nolink">[!:Kaazing.JMS.IXASession]</span></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
      </div>
    </div>
  </body>
</html>