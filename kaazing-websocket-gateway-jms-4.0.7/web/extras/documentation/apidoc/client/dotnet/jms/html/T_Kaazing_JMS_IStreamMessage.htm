<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" />
    <META NAME="save" CONTENT="history" />
    <title>IStreamMessage Interface</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="IStreamMessage interface" />
    <meta name="System.Keywords" content="Kaazing.JMS.IStreamMessage interface" />
    <meta name="System.Keywords" content="IStreamMessage interface, about IStreamMessage interface" />
    <meta name="Microsoft.Help.F1" content="Kaazing.JMS.IStreamMessage" />
    <meta name="Microsoft.Help.Id" content="T:Kaazing.JMS.IStreamMessage" />
    <meta name="Description" content="A StreamMessage object is used to send a stream of primitive types. It is filled and read sequentially. It inherits from the Message interface and adds a stream message body. Its methods are based largely on those found in java.io.DataInputStream and java." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <link rel="stylesheet" type="text/css" href="../styles/presentation.css" />
    <link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" />
    <script type="text/javascript" src="../scripts/EventUtilities.js"> </script>
    <script type="text/javascript" src="../scripts/SplitScreen.js"> </script>
    <script type="text/javascript" src="../scripts/Dropdown.js"> </script>
    <script type="text/javascript" src="../scripts/script_manifold.js"> </script>
    <script type="text/javascript" src="../scripts/script_feedBack.js"> </script>
    <script type="text/javascript" src="../scripts/CheckboxMenu.js"> </script>
    <script type="text/javascript" src="../scripts/CommonUtilities.js"> </script>
    <meta name="container" content="Kaazing.JMS" />
    <meta name="file" content="T_Kaazing_JMS_IStreamMessage" />
    <meta name="guid" content="T_Kaazing_JMS_IStreamMessage" />
    <xml>
      <MSHelp:Attr Name="AssetID" Value="T:Kaazing.JMS.IStreamMessage" />
      <MSHelp:TOCTitle Title="IStreamMessage Interface" />
      <MSHelp:RLTitle Title="IStreamMessage Interface (Kaazing.JMS)" />
      <MSHelp:Keyword Index="A" Term="T:Kaazing.JMS.IStreamMessage" />
      <MSHelp:Keyword Index="A" Term="frlrfKaazingJMSIStreamMessageClassTopic" />
      <MSHelp:Keyword Index="K" Term="IStreamMessage interface" />
      <MSHelp:Keyword Index="K" Term="Kaazing.JMS.IStreamMessage interface" />
      <MSHelp:Keyword Index="K" Term="IStreamMessage interface, about IStreamMessage interface" />
      <MSHelp:Keyword Index="F" Term="Kaazing.JMS.IStreamMessage" />
      <MSHelp:Attr Name="HelpPriority" Value="2" />
      <MSHelp:Attr Name="APIType" Value="Managed" />
      <MSHelp:Attr Name="APILocation" Value="Kaazing.JMS.dll" />
      <MSHelp:Attr Name="APIName" Value="Kaazing.JMS.IStreamMessage" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="Abstract" Value="A StreamMessage object is used to send a stream of primitive types. It is filled and read sequentially. It inherits from the Message interface and adds a stream message body. Its methods are ba ..." />
      <MSHelp:Attr Name="AssemblyVersion" Value="4.0.0.69" />
    </xml>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <input type="hidden" id="hiddenScrollOffset" />
    <img id="collapseImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" alt="Collapse image" title="Collapse image" />
    <img id="expandImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" alt="Expand Image" title="Expand Image" />
    <img id="collapseAllImage" style="display:none; height:0; width:0;" src="../icons/collapse_all.gif" />
    <img id="expandAllImage" style="display:none; height:0; width:0;" src="../icons/expand_all.gif" />
    <img id="dropDownImage" style="display:none; height:0; width:0;" src="../icons/dropdown.gif" />
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" src="../icons/dropdownHover.gif" />
    <img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" />
    <img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" />
    <div id="header">
      <table id="topTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage, event)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" src="../icons/collapse_all.gif" /> <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">Collapse All</label><label id="expandAllLabel" for="toggleAllImage" style="display: none;">Expand All</label> </span>
            <span>    </span>
            <span id="devlangsDropdown" class="filter" tabindex="0">
              <img id="devlangsDropdownImage" src="../icons/dropdown.gif" /> <label id="devlangsMenuAllLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: All </nobr></label><label id="devlangsMenuMultipleLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Multiple </nobr></label><label id="devlangsMenuVisualBasicLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual Basic </nobr></label><label id="devlangsMenuCSharpLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: C# </nobr></label><label id="devlangsMenuManagedCPlusPlusLabel" for="devlangsDropdownImage" style="display: none;"><nobr>Code: Visual C++ </nobr></label></span>
          </td>
        </tr>
      </table>
      <div id="devlangsMenu">
        <input id="VisualBasicCheckbox" type="checkbox" data="VisualBasic,vb,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="VisualBasicCheckbox">Visual Basic</label>
        <br />
        <input id="CSharpCheckbox" type="checkbox" data="CSharp,cs,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="CSharpCheckbox">C#</label>
        <br />
        <input id="ManagedCPlusPlusCheckbox" type="checkbox" data="ManagedCPlusPlus,cpp,'persist'" value="on" onClick="SetLanguage(this)" />
        <label class="checkboxLabel" for="ManagedCPlusPlusCheckbox">Visual C++</label>
        <br />
      </div>
      <table id="bottomTable" cellpadding="0" cellspacing="0">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">.NET Framework Class Library</span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">IStreamMessage Interface</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td align="left">
            <a href="AllMembers_T_Kaazing_JMS_IStreamMessage.htm">Members</a>  <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a>  </td>
        </tr>
      </table>
      <table id="gradientTable">
        <tr>
          <td class="nsrBottom" background="../icons/gradient.gif" />
        </tr>
      </table>
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()" />
        <font color="DarkGray"></font>
        <p /> <div class="summary">
             A StreamMessage object is used to send a stream of primitive
             types. It is filled and read sequentially.
             It inherits from the Message interface
             and adds a stream message body. Its methods are based largely on those
             found in java.io.DataInputStream and
             java.io.DataOutputStream.
            
             <p>The primitive types can be read or written explicitly using methods
             for each type. They may also be read or written generically as objects.
             For instance, a call to StreamMessage.writeInt(6) is
             equivalent to StreamMessage.writeObject(new Integer(6)).
             Both forms are provided, because the explicit form is convenient for
             static programming, and the object form is needed when types are not known
             at compile time.</p><p>When the message is first created, and when clearBody
             is called, the body of the message is in write-only mode. After the 
             first call to reset has been made, the message body is in 
             read-only mode. 
             After a message has been sent, the client that sent it can retain and 
             modify it without affecting the message that has been sent. The same message
             object can be sent multiple times.
             When a message has been received, the provider has called 
             reset so that the message body is in read-only mode for the client.</p><p>If clearBody is called on a message in read-only mode, 
             the message body is cleared and the message body is in write-only mode.</p><p>If a client attempts to read a message in write-only mode, a 
             MessageNotReadableException is thrown.</p><p>If a client attempts to write a message in read-only mode, a 
             MessageNotWriteableException is thrown.</p><p>StreamMessage objects support the following conversion 
             table. The marked cases must be supported. The unmarked cases must throw a 
             JMSException. The String-to-primitive conversions 
             may throw a runtime exception if the primitive's valueOf() 
             method does not accept it as a valid String representation of 
             the primitive.</p><p>A value written as the row type can be read as the column type.</p><div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this, event)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="Copy image" title="Copy image" src="../icons/copycode.gif" />Copy Code</span></th></tr><tr><td colspan="2"><pre>
             |        | boolean byte short char int long float double String byte[]
             |----------------------------------------------------------------------
             |boolean |    X                                            X
             |byte    |          X     X         X   X                  X   
             |short   |                X         X   X                  X   
             |char    |                     X                           X
             |int     |                          X   X                  X   
             |long    |                              X                  X   
             |float   |                                    X     X      X   
             |double  |                                          X      X   
             |String  |    X     X     X         X   X     X     X      X   
             |byte[]  |                                                        X
             |----------------------------------------------------------------------
             </pre></td></tr></table></span></div><p>Attempting to read a null value as a primitive type must be treated
             as calling the primitive's corresponding valueOf(String) 
             conversion method with a null value. Since char does not 
             support a String conversion, attempting to read a null value 
             as a char must throw a ArgumentException.</p></div><p />
    <b>Namespace:</b> 
   <a href="N_Kaazing_JMS.htm">Kaazing.JMS</a><br />
    <b>Assembly:</b>
   <span sdata="assembly">Kaazing.JMS</span> (in Kaazing.JMS.dll)<h1 class="heading"><span onclick="ExpandCollapse(syntaxToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(syntaxToggle, event)" tabindex="0"><img id="syntaxToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />Syntax</span></h1><div id="syntaxSection" class="section" name="collapseableSection" style=""><div id="syntaxCodeBlocks" class="code"><span codeLanguage="VisualBasicDeclaration"><table><tr><th>Visual Basic</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IStreamMessage</span> _
	<span class="keyword">Inherits</span> <a href="T_Kaazing_JMS_IMessage.htm">IMessage</a></pre></td></tr></table></span><span codeLanguage="CSharp"><table><tr><th>C#</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IStreamMessage</span> : <a href="T_Kaazing_JMS_IMessage.htm">IMessage</a></pre></td></tr></table></span><span codeLanguage="ManagedCPlusPlus"><table><tr><th>Visual C++</th></tr><tr><td><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IStreamMessage</span> : <a href="T_Kaazing_JMS_IMessage.htm">IMessage</a></pre></td></tr></table></span></div></div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle, event)" tabindex="0"><img id="seeAlsoToggle" class="toggle" name="toggleSwitch" src="../icons/collapse_all.gif" />See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><a href="AllMembers_T_Kaazing_JMS_IStreamMessage.htm">IStreamMessage Members</a></div><div class="seeAlsoStyle"><a href="N_Kaazing_JMS.htm">Kaazing.JMS Namespace</a></div><div class="seeAlsoStyle"><a href="M_Kaazing_JMS_ISession_CreateStreamMessage.htm">ISession<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>CreateStreamMessage<span class="languageSpecificText"><span class="cs">()</span><span class="cpp">()</span><span class="nu">()</span><span class="fs">()</span></span></a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_IBytesMessage.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IBytesMessage</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_IMapMessage.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IMapMessage</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_IMessage.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IMessage</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_IObjectMessage.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>IObjectMessage</a></div><div class="seeAlsoStyle"><a href="T_Kaazing_JMS_ITextMessage.htm">Kaazing.JMS<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>ITextMessage</a></div></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" src="../icons/footer.gif" alt="Footer image" title="Footer image" />
        </div>
      </div>
    </div>
  </body>
</html>